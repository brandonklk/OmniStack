{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"E:\\\\semana dev\\\\projeto\\\\teste\\\\mobile\\\\mobile\\\\src\\\\pages\\\\Incidents\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Feather } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport api from \"../../services/api\";\nimport logoImg from \"../../assets/logo.png\";\nimport styles from \"./styles\";\nexport default function Incidents() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      incidents = _useState2[0],\n      setIncidents = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      total = _useState4[0],\n      setTotal = _useState4[1];\n\n  var _useState5 = useState(1),\n      _useState6 = _slicedToArray(_useState5, 2),\n      page = _useState6[0],\n      setPage = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var navigation = useNavigation();\n\n  function navigateToDetail(incident) {\n    navigation.navigate('Detail', {\n      incident: incident\n    });\n  }\n\n  function loadIncidents() {\n    var response;\n    return _regeneratorRuntime.async(function loadIncidents$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!loading) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            if (!(total > 0 && incidents.length === total)) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 4:\n            setLoading(true);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(api.get('incidents', {\n              params: {\n                page: page\n              }\n            }));\n\n          case 7:\n            response = _context.sent;\n            setIncidents([].concat(_toConsumableArray(incidents), _toConsumableArray(response.data)));\n            setTotal(response.headers['x-total-count']);\n            setPage(page + 1);\n            setLoading(false);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    loadIncidents();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: logoImg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: styles.headerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Total de \", React.createElement(Text, {\n    style: styles.headerTextBold,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 30\n    }\n  }, total, \" casos.\"))), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.description,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), React.createElement(FlatList, {\n    data: incidents,\n    style: styles.incidentList,\n    keyExtractor: function keyExtractor(incident) {\n      return String(incident.id);\n    },\n    showsVerticalScrollIndicator: false,\n    onEndReached: loadIncidents,\n    onEndReachedThreshold: 0.2,\n    renderItem: function renderItem(_ref) {\n      var incident = _ref.item;\n      return React.createElement(View, {\n        style: styles.incident,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, \"ONG:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }\n      }, incident.name), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }, \"CASO:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }, incident.title), React.createElement(Text, {\n        style: styles.incidentProperty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, \"VALOR:\"), React.createElement(Text, {\n        style: styles.incidentValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, Intl.NumberFormat('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      }).format(incident.value)), React.createElement(TouchableOpacity, {\n        style: styles.detailsButton,\n        onPress: function onPress() {\n          return navigateToDetail(incident);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.detailsButtonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }\n      }, \"Ver mais detalhes\"), React.createElement(Feather, {\n        name: \"arrow-right\",\n        size: 16,\n        color: \"#E02041\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }\n      })));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["E:/semana dev/projeto/teste/mobile/mobile/src/pages/Incidents/index.js"],"names":["React","useState","useEffect","Feather","useNavigation","api","logoImg","styles","Incidents","incidents","setIncidents","total","setTotal","page","setPage","loading","setLoading","navigation","navigateToDetail","incident","navigate","loadIncidents","length","get","params","response","data","headers","container","header","headerText","headerTextBold","title","description","incidentList","String","id","item","incidentProperty","incidentValue","name","Intl","NumberFormat","style","currency","format","value","detailsButton","detailsButtonText"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Feather } from '@expo/vector-icons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { Image, Text, View, TouchableOpacity, FlatList } from 'react-native';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport logoImg from '../../assets/logo.png';\r\n\r\nimport styles from './styles';\r\n\r\nexport default function Incidents(){\r\n    const [incidents, setIncidents] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    const [page, setPage] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const navigation = useNavigation();\r\n\r\n    function navigateToDetail(incident){\r\n        navigation.navigate('Detail', { incident });\r\n    }\r\n\r\n    async function loadIncidents(){\r\n        if(loading){\r\n            return;\r\n        }\r\n\r\n        if(total > 0 && incidents.length === total){\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n\r\n        const response = await api.get('incidents', {\r\n            params: { page }\r\n        });\r\n\r\n        setIncidents([...incidents, ...response.data]);\r\n        setTotal(response.headers['x-total-count']);\r\n        setPage(page + 1);\r\n        setLoading(false);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadIncidents();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.header}>\r\n                <Image source={logoImg} />\r\n                <Text style={styles.headerText}>\r\n                    Total de <Text style={styles.headerTextBold}>{total} casos.</Text>\r\n                </Text>\r\n            </View>\r\n\r\n            <Text style={styles.title}></Text>\r\n            <Text style={styles.description}></Text>\r\n\r\n            <FlatList\r\n                data={incidents}\r\n                style={styles.incidentList}\r\n                keyExtractor={incident => String(incident.id)}\r\n                showsVerticalScrollIndicator={false}\r\n                onEndReached={loadIncidents}\r\n                onEndReachedThreshold={0.2}\r\n                renderItem={({ item: incident }) => (\r\n                    <View style={styles.incident}>\r\n                        <Text style={styles.incidentProperty}>ONG:</Text>\r\n                        <Text style={styles.incidentValue}>{incident.name}</Text>\r\n\r\n                        <Text style={styles.incidentProperty}>CASO:</Text>\r\n                        <Text style={styles.incidentValue}>{incident.title}</Text>\r\n\r\n                        <Text style={styles.incidentProperty}>VALOR:</Text>\r\n                        <Text style={styles.incidentValue}>\r\n                                {Intl.NumberFormat('pt-BR', { \r\n                                style: 'currency', \r\n                                currency: 'BRL' \r\n                            }).format(incident.value)}\r\n                        </Text>\r\n\r\n                        <TouchableOpacity \r\n                            style={styles.detailsButton} \r\n                            onPress={() => navigateToDetail(incident)}\r\n                        \r\n                        >\r\n                            <Text style={styles.detailsButtonText}>Ver mais detalhes</Text>\r\n                            <Feather name=\"arrow-right\" size={16} color=\"#E02041\"/>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                )}\r\n            />\r\n\r\n        </View>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}